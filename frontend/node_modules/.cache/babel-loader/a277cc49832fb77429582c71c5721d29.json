{"ast":null,"code":"var _jsxFileName = \"/home/sangam/Documents/Mongodb/food/frontend/src/pages/Home.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport \"./Home.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Home() {\n  _s();\n  const [isLogin, setIsLogin] = useState(true);\n  const [form, setForm] = useState({\n    email: \"\",\n    password: \"\"\n  });\n  const [error, setError] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const navigate = useNavigate();\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setLoading(true);\n    setError(\"\");\n\n    // Example validation\n    if (!/\\S+@\\S+\\.\\S+/.test(form.email)) {\n      setError(\"Invalid email format\");\n      setLoading(false);\n      return;\n    }\n    try {\n      // Simulate API call\n      const isSuccess = true; // Replace with actual API logic\n      if (isSuccess) {\n        navigate(\"/user\"); // Navigate to the user page on success\n      }\n    } catch (err) {\n      setError(\"An error occurred\");\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: isLogin ? \"Login\" : \"Sign Up\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        name: \"email\",\n        placeholder: \"Enter Email\",\n        value: form.email,\n        onChange: e => setForm({\n          ...form,\n          [e.target.name]: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        name: \"password\",\n        placeholder: \"Enter Password\",\n        value: form.password,\n        onChange: e => setForm({\n          ...form,\n          [e.target.name]: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        disabled: loading,\n        children: loading ? \"Processing...\" : isLogin ? \"Login\" : \"Sign Up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-message\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n_s(Home, \"QV39oFs7UcNFPARUrcBfw/jgtAU=\", false, function () {\n  return [useNavigate];\n});\n_c = Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useState","useNavigate","jsxDEV","_jsxDEV","Home","_s","isLogin","setIsLogin","form","setForm","email","password","error","setError","loading","setLoading","navigate","handleSubmit","e","preventDefault","test","isSuccess","err","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","name","placeholder","value","onChange","target","disabled","_c","$RefreshReg$"],"sources":["/home/sangam/Documents/Mongodb/food/frontend/src/pages/Home.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport \"./Home.css\";\n\nexport default function Home() {\n  const [isLogin, setIsLogin] = useState(true);\n  const [form, setForm] = useState({ email: \"\", password: \"\" });\n  const [error, setError] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const navigate = useNavigate();\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setLoading(true);\n    setError(\"\");\n\n    // Example validation\n    if (!/\\S+@\\S+\\.\\S+/.test(form.email)) {\n      setError(\"Invalid email format\");\n      setLoading(false);\n      return;\n    }\n\n    try {\n      // Simulate API call\n      const isSuccess = true; // Replace with actual API logic\n      if (isSuccess) {\n        navigate(\"/user\"); // Navigate to the user page on success\n      }\n    } catch (err) {\n      setError(\"An error occurred\");\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"login-container\">\n      <h2>{isLogin ? \"Login\" : \"Sign Up\"}</h2>\n      <form onSubmit={handleSubmit}>\n        <input\n          type=\"email\"\n          name=\"email\"\n          placeholder=\"Enter Email\"\n          value={form.email}\n          onChange={(e) => setForm({ ...form, [e.target.name]: e.target.value })}\n        />\n        <input\n          type=\"password\"\n          name=\"password\"\n          placeholder=\"Enter Password\"\n          value={form.password}\n          onChange={(e) => setForm({ ...form, [e.target.name]: e.target.value })}\n        />\n        <button type=\"submit\" disabled={loading}>\n          {loading ? \"Processing...\" : isLogin ? \"Login\" : \"Sign Up\"}\n        </button>\n      </form>\n      {error && <div className=\"error-message\">{error}</div>}\n    </div>\n  );\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}